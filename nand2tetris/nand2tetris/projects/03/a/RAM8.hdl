// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
        IN in[16], load, address[3];
        OUT out[16];

        PARTS:
        DMux8Way(in=true, sel=address, a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
        And(a=r0, b=load, out=outand0);
        Register(in=in, load=outand0, out=out0);
        And(a=r1, b=load, out=outand1);
        Register(in=in, load=outand1, out=out1);
        And(a=r2, b=load, out=outand2);
        Register(in=in, load=outand2, out=out2);
        And(a=r3, b=load, out=outand3);
        Register(in=in, load=outand3, out=out3);
        And(a=r4, b=load, out=outand4);
        Register(in=in, load=outand4, out=out4);
        And(a=r5, b=load, out=outand5);
        Register(in=in, load=outand5, out=out5);
        And(a=r6, b=load, out=outand6);
        Register(in=in, load=outand6, out=out6);
        And(a=r7, b=load, out=outand7);
        Register(in=in, load=outand7, out=out7);
        Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address, out=out);
        
    // Put your code here:
}
