// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
        IN in[16], load, address[14];
        OUT out[16];

        PARTS:
        DMux4Way(in=true, sel=address[12..13], a=ram0, b=ram1, c=ram2, d=ram3);

        And(a=ram0, b=load, out=loadram0);
        RAM4K(in=in, load=loadram0, address=address[0..11], out=outram0);
        And(a=ram1, b=load, out=loadram1);
        RAM4K(in=in, load=loadram1, address=address[0..11], out=outram1);
        And(a=ram2, b=load, out=loadram2);
        RAM4K(in=in, load=loadram2, address=address[0..11], out=outram2);
        And(a=ram3, b=load, out=loadram3);
        RAM4K(in=in, load=loadram3, address=address[0..11], out=outram3);

        Mux4Way16(a=outram0, b=outram1, c=outram2, d=outram3, sel=address[12..13], out=out);
}
